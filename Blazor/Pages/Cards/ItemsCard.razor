@page "/ItemsCard/{Id}"
@using Blazor.Data
@using Entities.Models

@inject DialogService DialogService
@inject IItemLocationHandler _itemLocationHandler

<RadzenCard Style="margin-bottom: 20px;">
    <div class="row">
        <div class="col-md-12">
            <h3>Item Details</h3>
            <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Data="@_itemLocations" TItem="ItemLocation" ColumnWidth="200px">
                <Columns>
                    <RadzenDataGridColumn TItem="ItemLocation" Property="Item.ItemName" Title="Item Name"/>
                    <RadzenDataGridColumn TItem="ItemLocation" Property="Amount" Title="Amount"/>
                    <RadzenDataGridColumn TItem="ItemLocation" Property="Item.Length" Title="Length"/>
                    <RadzenDataGridColumn TItem="ItemLocation" Property="Item.Width" Title="Width"/>
                    <RadzenDataGridColumn TItem="ItemLocation" Property="Item.Height" Title="Height"/>
                    <RadzenDataGridColumn TItem="ItemLocation" Property="Item.Weight" Title="Weight"/>
                </Columns>
            </RadzenDataGrid>
        </div>
    </div>
</RadzenCard>

@code {
    private IList<ItemLocation> _itemLocations;

    private ItemLocation SetupItem()
    {
        ItemLocation itemLocation = new ItemLocation();
        itemLocation.Item = new Item();
        itemLocation.Location = new Location();
        itemLocation.Location.Id = Id;

        return itemLocation;
    }

    [Parameter]
    public int Id { get; set; }

    protected override async void OnInitialized()
    {
        _itemLocations = await _itemLocationHandler.GetAllByLocationIdAsync(SetupItem());
    }

}